specVersion: "1.0.0"

name: "subquery-example-polygon-plasma-bridge"
version: "0.0.1"
runner:
  node:
    name: "@subql/node-ethereum"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: "This example project indexes all token deposits from the Polygon Plamsa Bridge"
repository: "https://github.com/subquery/subquery-example-polygon-plasma-bridge"

schema:
  file: "./schema.graphql"

network:
  # chainId is the EVM Chain ID, for Polygon this is 137
  # https://chainlist.org/chain/137
  chainId: "137"
  # This endpoint must be a public non-pruned archive node
  # Public nodes may be rate limited, which can affect indexing speed
  # When developing your project we suggest getting a private API key
  # You can get them from OnFinality for free https://app.onfinality.io
  # https://documentation.onfinality.io/support/the-enhanced-api-service
  endpoint: "https://polygon.api.onfinality.io/public"
  # Recommended to provide the HTTP endpoint of a full chain dictionary to speed up processing
  dictionary: "https://gx.api.subquery.network/sq/subquery/polygon-dictionary"

dataSources:
  - kind: ethereum/Runtime # We use ethereum runtime since Polygon is a layer-2 that is compatible
    startBlock: 849 # This is the block that the contract was deployed on https://polygonscan.com/tx/0x88e3ab569326b52e9dd8a5f72545d89d8426bbf536f3bfaf31e023fb459ca373
    options:
      # Must be a key of assets
      abi: plasma
      address: "0xD9c7C4ED4B66858301D0cb28Cc88bf655Fe34861" # Plasma contract
    assets:
      plasma:
        file: "plasma.abi.json"
    mapping:
      file: "./dist/index.js"
      handlers:
        - handler: handleDeposit
          kind: ethereum/LogHandler # We use ethereum handlers since Polygon is a layer-2 that is compatible
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - TokenDeposited (address indexed rootToken, address indexed childToken, address indexed user, uint256 amount, uint256 depositCount)
        - handler: handleWithdrawl
          kind: ethereum/LogHandler # We use ethereum handlers since Polygon is a layer-2 that is compatible
          filter:
            topics:
              ## Follows standard log filters https://docs.ethers.io/v5/concepts/events/
              - TokenWithdrawn (address indexed rootToken, address indexed childToken, address indexed user, uint256 amount, uint256 withrawCount)
